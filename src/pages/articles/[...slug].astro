---
import { CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import A from "@components/astro/PreviewableLink.astro";
import Code from "@components/astro/Code.astro";
import Img from "@components/astro/Img.astro";
import Pre from "@components/astro/Pre.astro";
import H1 from "@components/astro/H1.astro";
import H2 from "@components/astro/H2.astro";
import H3 from "@components/astro/H3.astro";
import P from "@components/astro/P.astro";
import Blockquote from "@components/astro/Blockquote.astro";
import Table from "@components/astro/Table.astro";
import Tr from "@components/astro/Tr.astro";
import Th from "@components/astro/Th.astro";
import Td from "@components/astro/Td.astro";
import TelegramComments from "@components/astro/TelegramComments.astro";

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));
}
type Props = CollectionEntry<"articles">;

const article = Astro.props;

const { telegramPostId } = article.data;

const { Content } = await article.render();
---

<BlogPost {...article.data}>
  <Content
    components={{
      a: A,
      code: Code,
      img: Img,
      pre: Pre,
      h1: H1,
      h2: H2,
      h3: H3,
      p: P,
      table: Table,
      tr: Tr,
      th: Th,
      td: Td,
      blockquote: Blockquote,
    }}
  />

  {telegramPostId && <TelegramComments postId={telegramPostId} />}
</BlogPost>
